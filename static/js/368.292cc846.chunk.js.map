{"version":3,"file":"static/js/368.292cc846.chunk.js","mappings":"gRAGaA,EAAc,SAAC,GACxB,OADwC,EAAdC,QAEdC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,EADD,GAOnB,ECNYG,EAAU,WACnB,OAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEQN,GAAOO,EAAAA,EAAAA,MAAPP,GAQR,OANAQ,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAA8BT,GACzBU,KAAKJ,GACLK,MAAMC,EAAAA,GAAAA,MAAY,yBAC1B,GAAE,CAACZ,KAGA,yBACKK,IACkC,IAA9BA,EAAYQ,eACT,qEACA,SAAChB,EAAD,CAAaC,QAASO,EAAYS,YAIrD,EACD,G,mMCzBMC,EAAU,mCAGT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBC,EAAAA,EAAAA,IAAA,gCAAmCH,EAAnC,kBAAoDE,IADxE,cACGE,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBH,EAAAA,EAAAA,IAAA,sCAAyCH,IAD7D,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACoBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAsCR,IAD1D,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACoBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CR,IADlE,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,uFACoBL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,4BAA8CR,IADlE,cACGI,EADH,yBAEIA,EAASC,MAFb,kEAtBPF,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/ReviewsCard/ReviewsCard.js","pages/Reviews/Reviews.js","utils/FetchTMDB.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\n\n\nexport const ReviewsCard = ({ reviews }) => {\n    return (\n        reviews.map(({ id, author, content }) => (\n            <li key={id}>\n                <h2>Author: {author}</h2>\n                <p>{content}</p>\n            </li>\n        )))\n    \n};\n\nReviewsCard.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired\n    })).isRequired\n}","import { useState, useEffect} from \"react\";\nimport * as FetchTMDB from \"utils/FetchTMDB\";\nimport { useParams } from 'react-router-dom';\nimport  toast  from \"react-hot-toast\";\nimport { ReviewsCard } from \"components/ReviewsCard/ReviewsCard\";\n\nexport const Reviews = () => {\n    const [filmReviews, setFilmReviews] = useState(null)\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        FetchTMDB.getReviewsFromMovie(id)\n            .then(setFilmReviews)\n            .catch(toast.error('Oops, something wrong'))\n    }, [id])\n    \n    return (\n        <div>\n            {filmReviews &&\n                (filmReviews.total_results === 0 ?\n                    <p>We don't have any reviews for this movie</p> :\n                    <ReviewsCard reviews={filmReviews.results} />)\n            }\n        </div>\n    )\n};\nexport default Reviews;","import axios from 'axios';\n\nconst API_KEY = 'c28a60c35f7c1f6eafdc45cc0b774d29';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function searchMovies(searchQuery) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n    return response.data\n};\n\nexport async function getTrendingToday() {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`)\n    return response.data\n};\n\nexport async function getFullInfoAboutMovie(movieId) {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`)\n    return response.data\n};\n\nexport async function getCastFromMovie(movieId) {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}`)\n    return response.data\n};\n\nexport async function getReviewsFromMovie(movieId) {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}`)\n    return response.data\n};\n\n// https://api.themoviedb.org/3/movie/411/?api_key=c28a60c35f7c1f6eafdc45cc0b774d29&poster_path=iREd0rNCjYdf5Ar0vfaW32yrkm.jpg"],"names":["ReviewsCard","reviews","map","id","author","content","Reviews","useState","filmReviews","setFilmReviews","useParams","useEffect","FetchTMDB","then","catch","toast","total_results","results","API_KEY","searchMovies","searchQuery","axios","response","data","getTrendingToday","getFullInfoAboutMovie","movieId","getCastFromMovie","getReviewsFromMovie"],"sourceRoot":""}